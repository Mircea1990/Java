<?xml version='1.0' encoding='UTF-8' ?>


<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns="http://www.w3.org/1999/xhtml">
    <h:head>
        <title>An @OnOpen example</title>
    </h:head>
    <h:body>
        <script>
            var wsUri = "ws://#{request.serverName}:#{request.serverPort}#{request.contextPath}/echo";
            var output;
            
            function init() {
                output = document.getElementById("output");
                websocket = new WebSocket(wsUri);
                websocket.onopen = function (evt) {
                    onOpen(evt);
                };
                websocket.onmessage = function (evt) {
                    onMessage(evt);
                };
            }
            function onMessage(evt) {
                var p = document.createElement("p");
                p.innerHTML = evt.data;
                output.appendChild(p);
            }
            
            function onOpen(evt) {
                websocket.send("And we got back what we sent!");
            }
            
            window.addEventListener("load", init, false);
        
        </script>
        
        <h2>An Encoder/Decoder example</h2>
        <p>
            The example below automatically will connect to the endpoint, and
            send the message to the server, where it gets decoded and then
            encoded back as a response.
        </p>
        <div id="output"></div>
    </h:body>
</html>

